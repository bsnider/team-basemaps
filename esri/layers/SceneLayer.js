// COPYRIGHT Â© 2016 Esri
//
// All rights reserved under the copyright laws of the United States
// and applicable international laws, treaties, and conventions.
//
// This material is licensed for use under the Esri Master License
// Agreement (MLA), and is bound by the terms of that agreement.
// You may redistribute and use this code without modification,
// provided you adhere to the terms of the MLA and include this
// copyright notice.
//
// See use restrictions at http://www.esri.com/legal/pdfs/mla_e204_e300/english
//
// For additional information, contact:
// Environmental Systems Research Institute, Inc.
// Attn: Contracts and Legal Services Department
// 380 New York Street
// Redlands, California, USA 92373
// USA
//
// email: contracts@esri.com
//
// See http://js.arcgis.com/4.0/esri/copyright.txt for details.

//  copyright

/**
             * The copyright text as defined by the scene service.
             *
             * @type {string}
             */

define(["require","exports","../core/tsSupport/declareExtendsHelper","../core/tsSupport/decorateHelper","../core/tsSupport/declare","./Layer","./FeatureLayer","./support/Field","./support/LabelClass","./mixins/PortalLayer","../PopupTemplate","../request","../core/lang","../core/jsonDictionary","../core/MultiOriginJSONSupport","../core/urlUtils","../core/requireUtils","../core/promiseUtils","../core/Error","../geometry/Extent","../geometry/SpatialReference","../renderers/support/jsonUtils","../portal/PortalItem","dojo/_base/lang","dojo/io-query","dojo/promise/all","./support/arcgisLayerURL"],function(e,r,t,o,n,p,a,i,l,s,u,d,y,c,f,h,m,g,v,b,S,I,_,w,x,L,T){function F(){return p}var C=c({onTheGround:"on-the-ground",relativeToGround:"relative-to-ground",absoluteHeight:"absolute-height"}),E=function(r){function p(){r.call(this),this.copyright=null,this.popupEnabled=!0,this.layerId=null,this.version={major:0,minor:0,versionString:""},this.fields=null,this.fullExtent=null,this.elevationInfo=null,this.labelsVisible=!1,this.labelingInfo=null,this.legendEnabled=!0,this.renderer=null,this.cachedDrawingInfo={color:!1},this.spatialReference=null,this.popupTemplate=null,this.objectIdField=null,this.titleIncludesUrl=!0,this.title=null,this.blendMode=null,this._alreadyIssuedWarnings={},this._canUseXhr=null,this._addTrailingSlash=!1,this._popupSource={popupEnabled:"none",popupTemplate:"none"}}return t(p,r),p.prototype.normalizeCtorArgs=function(e,r){return"string"==typeof e?w.mixin({},{url:e},r):e},p.prototype.readCopyright=function(e,r){return r.copyrightText},p.prototype.readPopupEnabled=function(e,r){return null!=r.disablePopup?(this._popupSource.popupEnabled="service",!r.disablePopup):!0},p.prototype.readLayerId=function(e,r){return r.id},p.prototype.readVersion=function(e,r){var t=r.store;if("string"==typeof t.version){var o={major:0,minor:0,versionString:t.version},n=o.versionString.split(".");return n.length>=2&&(o.major=parseInt(n[0],10),o.minor=parseInt(n[1],10)),o}return null},p.prototype.readFields=function(e){return this._fieldsSource="service",e.map(i.fromJSON)},p.prototype.readFullExtent=function(e,r){var t=r.store,o=t.indexCRS||t.geographicCRS,n=o&&parseInt(o.substring(o.lastIndexOf("/")+1,o.length),10);return null==t||null==t.extent?null:new b({xmin:t.extent[0],ymin:t.extent[1],xmax:t.extent[2],ymax:t.extent[3],spatialReference:n})},p.prototype.readElevationInfo=function(e){return e=y.clone(e),e.mode=C.fromJSON(e.mode),e},Object.defineProperty(p.prototype,"geometryType",{get:function(){return R[this.profile]||"esriGeometryMesh"},enumerable:!0,configurable:!0}),p.prototype.readLabelsVisible=function(e,r){return r.showLabels},p.prototype.readLabelingInfo=function(e,r){var t=this;if(e=r.drawingInfo.labelingInfo,!e)return null;var o=/\[([^\[\]]+)\]/gi;return e.map(function(e){var r=l.fromJSON(e),n=r.labelExpression;return n&&(r.labelExpression=n.replace(o,function(e,r){var o=t.getField(r);return"["+(o&&o.name||r)+"]"})),r})},p.prototype.readLegendEnabled=function(e,r){return null!=r.showLegend?r.showLegend:!0},p.prototype.readRenderer=function(e,r){return e=r.drawingInfo.renderer,e&&(e=I.fromJSON(e)),e},p.prototype.readCachedDrawingInfo=function(e){return(null==e||"object"!=typeof e)&&(e={}),null==e.color&&(e.color=!1),e},p.prototype.readSpatialReference=function(e,r){if(null!=r.spatialReference)return S.fromJSON(r.spatialReference);var t=r.store,o=t.indexCRS||t.geographicCRS,n=o&&parseInt(o.substring(o.lastIndexOf("/")+1,o.length),10);return null!=n?new S(n):null},Object.defineProperty(p.prototype,"url",{set:function(e){var r=h.urlToObject(e),t=T.parse(r.path);if(t&&null!=t.sublayer){this.layerId=t.sublayer;var o=x.objectToQuery(r.query);e=t.url.path,o&&(e=e+"?"+o)}this._set("url",e)},enumerable:!0,configurable:!0}),p.prototype.readPopupTemplate=function(e,r){return r.popupInfo&&(this._popupSource.popupTemplate="service"),r.popupInfo&&u.fromJSON(r.popupInfo)},p.prototype.readObjectIdField=function(e,r){return!e&&r.fields&&r.fields.some(function(r){return"esriFieldTypeOID"===r.type&&(e=r.name),!!e}),e},p.prototype.readProfile=function(e,r){return r.store.profile},p.prototype.readRootNode=function(e,r){return r.store.rootNode},p.prototype.readTitle=function(e,r){if(null!=e)return e;var t=[];if(this.titleIncludesUrl){var o=T.parse(this.parsedUrl.path);o&&o.title&&t.push(o.title)}if(r.name){var n=T.cleanTitle(r.name);(0===t.length||-1===t[0].toLowerCase().indexOf(n.toLowerCase()))&&t.push(n)}return t.join(" - ")},Object.defineProperty(p.prototype,"parsedUrl",{get:function(){var e=this._get("url");if(!e)return null;var r=h.urlToObject(e);return null!=this.layerId&&T.match.test(r.path)&&(r.path=r.path+"/layers/"+this.layerId),r},enumerable:!0,configurable:!0}),p.prototype.load=function(){var e=this,r=this.loadFromPortal(function(){return e._fetchService()}).then(function(){return L([e._verifyRootNode(),e._setCompanionFeatureLayer()])});return this.addResolvingPromise(r),this},p.prototype.createGraphicsController=function(r){var t=this,o="./graphics/controllers/I3SOnDemandController";r.layer=this,r.addUrlTokenFunction=this._addUrlToken.bind(this),r.warningEvent=this.warningEvent.bind(this);var n=m.when(e,o).then(function(e){return new e(r)});return n.then(function(e){t.emit("graphics-controller-create",{graphicsController:e})}),n},p.prototype.createLayerView=function(r){var t,o=this,n=this.profile||"features-meshes";return t="features-meshes"===n||"meshpyramids"===n?"../views/3d/layers/SceneLayerView3D":"../views/3d/layers/SceneLayerGraphicsView3D",m.when(e,t).then(function(e){return new e({view:r,layer:o})})},p.prototype.getField=function(e){return this.companionFeatureLayer?this.companionFeatureLayer.getField(e):void 0},p.prototype.warningEvent=function(e,r){null==this._alreadyIssuedWarnings[e]&&(this._alreadyIssuedWarnings[e]=!0,this.emit("i3s-load-log",{type:1===r?"fatal":"warning",msg:e}),console.warn("i3s-load-log warningEvent severity "+r," message "+e))},p.prototype._readExtent=function(e){var r=e.store,t=r.indexCRS||r.geographicCRS,o=t&&parseInt(t.substring(t.lastIndexOf("/")+1,t.length),10);return null==r||null==r.extent?new b:new b({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:o})},p.prototype._addUrlToken=function(e){var r=w.mixin({},this.parsedUrl.query,{token:this.token});return r=x.objectToQuery(r),e+=r?"?"+r:"",null==this._canUseXhr&&(this._canUseXhr=h.canUseXhr(e)),this._canUseXhr?e:h.addProxy(e)},p.prototype._fetchService=function(){var e=this;return null==this.layerId&&/SceneServer\/*$/i.test(this.url)?d(this._addUrlToken(this.url),{query:{f:"json"},responseType:"json"}).then(function(r){return r.data&&Array.isArray(r.data.layers)&&r.data.layers.length>0&&(e.layerId=r.data.layers[0].id),e._fetchServiceLayer()}):this._fetchServiceLayer()},p.prototype._fetchServiceLayer=function(){var e=this;return d(this._addUrlToken(this.parsedUrl.path),{responseType:"json"}).then(function(r){r.ssl&&(e.url=e.url.replace(/^http:/i,"https:"));var t=r.data,o=t.store;if(null==o.indexCRS&&null==o.geographicCRS&&e.warningEvent("Input data invalid: layer.layerInfo.indexCRS is undefined.",1),e.read(t),1!==e.version.major)throw new v("scenelayer:version-not-supported","SceneLayer version is not supported.",{serviceVersion:o.serviceVersion,url:e.parsedUrl.path})})},p.prototype._verifyRootNode=function(){if(-1!==["meshpyramids","features-points"].indexOf(this.profile)){var e=h.join(this.parsedUrl.path,this.rootNode);return d(this._addUrlToken(e),{query:{f:"json"},responseType:"json"}).then(function(e){return e.data}).otherwise(function(r){throw new v("scenelayer:root-node-missing","Root node missing.",{error:r,url:e})})}},p.prototype._setCompanionFeatureLayer=function(){var e=this;return this._fetchCompanionFeatureLayer().then(function(r){e.companionFeatureLayer=r,r&&(r.fields&&!e.fields&&e.__accessor__.setDefault("fields",r.fields.slice()),null==r.popupTemplate||"portal"===e._popupSource.popupTemplate||"portal"!==r._popupSource.popupTemplate&&"service"===e._popupSource.popupTemplate||e.__accessor__.setDefault("popupTemplate",r.popupTemplate),null==r.popupEnabled||"portal"===e._popupSource.popupEnabled||"portal"!==r._popupSource.popupEnabled&&"service"===e._popupSource.popupEnabled||e.__accessor__.setDefault("popupEnabled",!!r.popupEnabled))})},p.prototype._fetchCompanionFeatureLayer=function(){var e,r=this;return-1===["meshpyramids","features-points"].indexOf(this.profile)?g.resolve(null):(e=this.portalItem&&this.portalItem.isResolved()?this._fetchCompanionFeatureLayerFromRelatedItems(this.portalItem):this._fetchCompanionFeatureLayerFromUrl(),e.then(function(e){return e._popupSource={popupEnabled:null,popupTemplate:null},e.load()}).otherwise(function(){return console.warn("Companion FeatureLayer could not be loaded. Popups will not work for this SceneLayer: "+r.title),null}))},p.prototype._fetchCompanionFeatureLayerFromRelatedItems=function(e){var r=this;return e.fetchRelatedItems({relationshipType:"Service2Data",direction:"forward"}).then(function(e){var t=e.filter(function(e){return"Feature Service"===e.type})[0];return t?r._fetchCompanionFeatureLayerFromPortalItem(new _({id:t.id,portal:t.portal})):r._fetchCompanionFeatureLayerFromUrl()})},p.prototype._fetchCompanionFeatureLayerFromPortalItem=function(e){var r=this;return e.load().then(function(e){return r._findMatchingCompanionSublayerUrl(e.url)}).then(function(r){return g.resolve(new a({url:r,portalItem:e}))})},p.prototype._fetchCompanionFeatureLayerFromUrl=function(){return this._findMatchingCompanionSublayerUrl().then(function(e){return g.resolve(new a({url:e}))})},p.prototype._findMatchingCompanionSublayerUrl=function(e){var r=this.parsedUrl.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i);if(!r)return g.reject();null==e&&(e=r[1]+"/FeatureServer");var t=e.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1"),o={query:{f:"json"},responseType:"json"},n=r[1]+"/SceneServer",p=parseInt(r[2],10),a=d(this._addUrlToken(n),o).otherwise(function(){return{layers:null}}),i=d(this._addUrlToken(t),o);return L([i,a]).then(function(e){var r=e[0],o=e[1],n=o.data&&o.data.layers,a=r.data&&r.data.layers;if(!Array.isArray(a))throw new Error("expected layers array");if(Array.isArray(n))for(var i=0;i<Math.min(n.length,a.length);i++){var l=n[i];if(l.id===p)return t+"/"+a[i].id}else if(p<a.length)return t+"/"+a[p].id;throw new Error("could not find matching companion sublayer")})},o([n.shared("esri.layers.SceneLayer")],p.prototype,"declaredClass",void 0),o([n.shared("portal/loaders/SceneLayerLoader")],p.prototype,"portalLoaderModule",void 0),o([n.shared({id:{json:{ignore:!0}}})],p.prototype,"properties",void 0),o([n.property({type:String})],p.prototype,"copyright",void 0),o([n.read("copyright",["copyrightText"])],p.prototype,"readCopyright",null),o([n.property({type:Boolean})],p.prototype,"popupEnabled",void 0),o([n.read("popupEnabled",["disablePopup"])],p.prototype,"readPopupEnabled",null),o([n.property({type:Number})],p.prototype,"layerId",void 0),o([n.read("layerId",["id"])],p.prototype,"readLayerId",null),o([n.property({readOnly:!0})],p.prototype,"version",void 0),o([n.read("version",["store.version"])],p.prototype,"readVersion",null),o([n.property()],p.prototype,"fields",void 0),o([n.read("fields")],p.prototype,"readFields",null),o([n.property({readOnly:!0})],p.prototype,"attributeStorageInfo",void 0),o([n.property({type:b})],p.prototype,"fullExtent",void 0),o([n.read("fullExtent",["store.indexCRS","store.geographicCRS"])],p.prototype,"readFullExtent",null),o([n.property()],p.prototype,"elevationInfo",void 0),o([n.read("elevationInfo")],p.prototype,"readElevationInfo",null),o([n.property({type:String,dependsOn:["profile"]})],p.prototype,"geometryType",null),o([n.property({type:Boolean})],p.prototype,"labelsVisible",void 0),o([n.read("labelsVisible",["showLabels"])],p.prototype,"readLabelsVisible",null),o([n.property()],p.prototype,"labelingInfo",void 0),o([n.read("labelingInfo",["drawingInfo.labelingInfo"])],p.prototype,"readLabelingInfo",null),o([n.property({type:Boolean})],p.prototype,"legendEnabled",void 0),o([n.read("legendEnabled",["showLegend"])],p.prototype,"readLegendEnabled",null),o([n.property()],p.prototype,"renderer",void 0),o([n.read("renderer",["drawingInfo.renderer"])],p.prototype,"readRenderer",null),o([n.property()],p.prototype,"cachedDrawingInfo",void 0),o([n.read("cachedDrawingInfo")],p.prototype,"readCachedDrawingInfo",null),o([n.property({type:S})],p.prototype,"spatialReference",void 0),o([n.read("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],p.prototype,"readSpatialReference",null),o([n.property()],p.prototype,"url",null),o([n.property()],p.prototype,"popupTemplate",void 0),o([n.read("popupTemplate",["popupInfo"])],p.prototype,"readPopupTemplate",null),o([n.property({type:String})],p.prototype,"objectIdField",void 0),o([n.read("objectIdField",["fields"])],p.prototype,"readObjectIdField",null),o([n.property({type:String})],p.prototype,"profile",void 0),o([n.read("profile",["store.profile"])],p.prototype,"readProfile",null),o([n.property({type:String})],p.prototype,"rootNode",void 0),o([n.read("rootNode",["store.rootNode"])],p.prototype,"readRootNode",null),o([n.property({type:Boolean})],p.prototype,"titleIncludesUrl",void 0),o([n.property({type:String})],p.prototype,"title",void 0),o([n.read("title",["title","name"])],p.prototype,"readTitle",null),o([n.property({dependsOn:["layerId"]})],p.prototype,"parsedUrl",null),o([n.property()],p.prototype,"store",void 0),p=o([n.subclass()],p)}(n.declared(F(),f,s)),R={"features-points":"esriGeometryPoint","features-lines":"esriGeometryPolyline","features-polygons":"esriGeometryPolygon"};return E});